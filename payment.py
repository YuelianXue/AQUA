import random
import string
import uuid
import asyncio
from telegram import InlineKeyboardMarkup, InlineKeyboardButton
from telegram.constants import ParseMode
import asyncio


# –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫—É—Ä—Å –æ–±–º–µ–Ω–∞: 98 —Ä—É–±. –∑–∞ 1 USD (–º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å)
CONVERSION_RATE = 98

def generate_transaction_number():
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –Ω–æ–º–µ—Ä —Å–¥–µ–ª–∫–∏: 10 —Å–∏–º–≤–æ–ª–æ–≤ (–±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã)
    return uuid.uuid4().hex[:10].upper()

def generate_random_comment(length=6):
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–∑ –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä
    chars = string.ascii_uppercase + string.digits
    return ''.join(random.choice(chars) for _ in range(length))

async def vip_payment_process_callback(update, context):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–û–ø–ª–∞—Ç–∏—Ç—å" (callback_data "vip_payment_confirm").
    –ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø–æ –ø–µ—Ä–µ–≤–æ–¥—É USDT —á–µ—Ä–µ–∑ –∫—Ä–∏–ø—Ç–æ–±–æ—Ç–∞,
    —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å—É–º–º—É –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –Ω–æ–º–µ—Ä —Å–¥–µ–ª–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.
    –ü–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤—ã–≤–æ–¥—è—Ç—Å—è –∫–Ω–æ–ø–∫–∏ "–û–ø–ª–∞—Ç–∏–ª" –∏ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é".
    """
    query = update.callback_query
    await query.answer()

    tariff_price_rub = context.user_data.get("tariff_price", 500)
    tariff_price_usd = tariff_price_rub / CONVERSION_RATE

    transaction_number = generate_transaction_number()
    random_comment = generate_random_comment()

    text = (
        "üí≥ *–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã VIP —Ç–∞—Ä–∏—Ñ–∞*\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ USDT —á–µ—Ä–µ–∑ –∫—Ä–∏–ø—Ç–æ–±–æ—Ç–∞ –ø–æ —Å–ª–µ–¥—É—é—â–µ–π —Å—Å—ã–ª–∫–µ:\n"
        "t.me/send?start=IVOWWDchBeV1\n\n"
        f"–°—É–º–º–∞ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞: *{tariff_price_rub} RUB* (–ø—Ä–∏–º–µ—Ä–Ω–æ *{tariff_price_usd:.2f} USD*).\n\n"
        f"–í–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–ª–∞—Ç–µ–∂—É: *{random_comment}*\n"
        f"–ù–æ–º–µ—Ä —Å–¥–µ–ª–∫–∏: *{transaction_number}*\n\n"
        "–ü–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É *–û–ø–ª–∞—Ç–∏–ª*, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É.\n"
        "–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: —Å–¥–µ–ª–∫–∞ –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç, –ø–æ—Å–ª–µ —á–µ–≥–æ, –µ—Å–ª–∏ –æ–ø–ª–∞—Ç–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞, –æ–Ω–∞ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω–∞."
    )
    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("–û–ø–ª–∞—Ç–∏–ª", callback_data="vip_payment_paid_callback")],
        [InlineKeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–¥ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏ –≤ –ë–î

    return text, keyboard



async def vip_payment_paid_callback(update, context):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–û–ø–ª–∞—Ç–∏–ª" (callback_data "vip_payment_paid").
    –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ "–û–∂–∏–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂...", –∑–∞—Ç–µ–º —á–µ—Ä–µ–∑ –∑–∞–¥–µ—Ä–∂–∫—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é.
    """
    query = update.callback_query
    await query.answer()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –æ–∂–∏–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
    await query.message.reply_text("–û–∂–∏–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂... \n\n –í–∞–º –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–∫ –ø–æ—Å—Ç—É–ø–∏—Ç –ø–ª–∞—Ç–µ–∂, –≤ –∏–Ω–æ–º —Å–ª—É—á–∞–µ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π \n\n –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", parse_mode=ParseMode.MARKDOWN)
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –Ω–∞ 5 —Å–µ–∫—É–Ω–¥ (–Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
    await asyncio.sleep(5)
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é get_main_menu –∏–∑ main.py (—É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ–ø—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É)
    from main import get_main_menu
    instructions_text, reply_markup = get_main_menu()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
    await query.message.reply_text(
         text=instructions_text,
         reply_markup=reply_markup,
         parse_mode=ParseMode.MARKDOWN,
         disable_web_page_preview=True
    )